input {
	tcp {
		port => 5000
		codec => "json"
	}
}

## Add your filters here
#filter {
	#grok {
	#	match => ["message", "\d\d(?<date_str>\d{8})..(?<code>.{12})(?<type>.{3})(?<name>.{12}).{17}(?<open>\d{13})(?<high>\d{13})(?<low>\d{13}).{13}(?<close>\d{13}).{49}(?<volume>\d{18}).*"]
	#}
	#date {
	#	match => ["date_str", "YYYYMMdd"]
	#	timezone => "America/Sao_Paulo"
	#}
	#mutate {
	#	convert => ["open", "integer"]
	#	convert => ["high", "integer"]
	#	convert => ["low", "integer"]
	#	convert => ["close", "integer"]
	#	convert => ["volume", "integer"]
	#}
#}
#filter {
#	if [alarm]  {
#		mutate {
#			replace => {"alarm" => 1}
#		}
#	} else {
#		mutate {
#			replace => {"alarm" => 0}
#		}
#	}
#	mutate {
#		gsub => [
#			"endpointResponseCode", "\.", "_",
#			"endpointResponseCode", "/", "__"
#		]
#	}
#}

filter {
	date {
		match => ["date", "YYYYMMdd"]
		timezone => "America/Sao_Paulo"
	}
	mutate {
    	remove_field => [ "date" ]
  	}
}

output {
	elasticsearch { 
		action => "index"
		hosts => "elasticsearch"
		index => "%{indexName}"
	}
	stdout { codec => rubydebug}
	graphite{
		host => "graphite"
		port => 2003
		metrics => [
				"stocksreport.%{indexName}.%{code}.closeValue", "%{closeValue}",
				"stocksreport.%{indexName}.%{code}.buyValue", "%{buyValue}",
				"stocksreport.%{indexName}.%{code}.sellValue", "%{sellValue}",
				"stocksreport.%{indexName}.%{code}.size", "%{size}",
				"stocksreport.%{indexName}.%{code}.stopPos", "%{stopPos}"
				]
		timestamp_field => "unixTimestamp"
	}
}
